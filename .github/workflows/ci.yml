name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  # Check code formatting
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - run: cargo fmt -- --check

  # Run clippy linting
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install GDAL
        run: |
          sudo apt-get update
          sudo apt-get install -y gdal-bin libgdal-dev
      
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      
      - run: cargo clippy -- -D warnings

  # Run tests on multiple platforms
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable, beta]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      
      - name: Install GDAL (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y gdal-bin libgdal-dev
      
      - name: Install GDAL (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install gdal
      
      - name: Install GDAL (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install gdal
      
      - name: Run tests
        run: cargo test --all-features --verbose

  # Test Python bindings
  test-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install GDAL
        run: |
          sudo apt-get update
          sudo apt-get install -y gdal-bin libgdal-dev
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Install dependencies
        run: |
          pip install maturin pytest
      
      - name: Build and install package
        run: |
          maturin develop --features python
      
      - name: Run Python tests
        run: |
          pytest python/tests -v